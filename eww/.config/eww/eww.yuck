(defwidget bar []
  (box :class "container"
    (left)
    (center)
    (right)
  )
)

(defwidget left []
  (box :class "left"
    (label :text "${window}" :limit-width 5)
  )
)
(defwidget center []
  (box :class "center" :halign "center"
    (workspaces)
  )
)
(defwidget right []
  (box :class "right"
    (label :class "time" :text "${time}")
    (label :class "battery" :text "${EWW_BATTERY["BAT0"].capacity}% ${EWW_BATTERY["BAT0"].status}")
    (volume_w)
  )
)

;; LEFT
(deflisten window :initial "..." "bash ~/.config/eww/scripts/get-window-title")

;; CENTER
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces"
    (box :space-evenly true :halign "center"
      (label :text "${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"} workspace${workspace.id}" :width 50
            (label :text "${workspace.id}")
          )
        )
      )
    )
  )
)

;; RIGHT

(defpoll time :interval "1s" "date '+%d.%m.%Y %T'")
(defpoll battery :interval "5m" "cat /sys/class/power_supply/BAT0/capacity")

(deflisten volume :initial "0" "bash ./scripts/get-volume")
(defwidget volume_w []
  (eventbox
    :class "volume"
    :onscroll "if [ '{}' = 'up' ]; then pamixer -i 5; else pamixer -d 5; fi"
    (button :onclick "pavucontrol &" "${volume}%")
  )
)

(defwindow bar
  :monitor 0
  :stacking "fg"
  :geometry (geometry :x "0px" :y "5px" :width "99%" :height "30px" :anchor "top center")
  :exclusive true
  (bar)
)
; vim:set ts=2 sw=2:
